[mesh]
    input_mesh_name = NONE # Default: NONE

    # number of elements per side
    elX = 10
    elY = 10
    elZ = 4

    maxX = 1.0
    maxY = 1.0
    maxZ = 0.08
    
    z_interface = 100 # Default: 0.0
[../]

[time]
    dt = 0.125      # Default: 1.0
    init_time = 0.0 # Default: 0.0
    final_time = 1  # Default: 1.0
    max_iter = 10   # Default: 99999999
    save_iter = 8   # Default: 1 
[../]

model = monowave
section = monowave

[monowave]
     output_folder = folder # Default: Output
     
     ionic_model = NashPanfilov  # Default: NashPanfilov
     [NashPanfilov]
        # Specification about the ionic model
        # Check the ionic model class for more info
     [../]
     
     # Initial Condition
     ic = 'x+3*t' # Default: NOIC


     #Anisotropy: 
     # isotropic: it uses only Dff
     # transverse: it uses Dff, Dss 
     # orthotropic: it uses Dff, Dss and Dnn
     anisotropy = transverse # Default: orthotropic
     # Conductivities
     Dff = 1.0     # Default: 1.3342   kOhm^-1 cm^-1
     Dss = 1.0     # Default: 0.17606  kOhm^-1 cm^-1
     Dnn = 1.0     # Default: 0.17606  kOhm^-1 cm^-1
     # Surface To Volume Ration
     Chi = 1000.0  # Default: 1400 cm^-1
     # Relaxation time
     tau = 1.0     # Default: 0.0 ms
     
     
     # Fiber fields
     fibers = '0.5*sqrt(2), 0.5*sqrt(2), 0.0'    # Default: '1.0, 0.0, 0.0'
     sheets = '-0.5*sqrt(2), 0.5*sqrt(2), 0.0'   # Default: '0.0, 1.0, 0.0'
     xfibers = '0.0, 0.0, 1.0'                   # Default: '0.0, 0.0, 1.0'
     
          
     # Matrix type
     diffusion_mass = mass        # Default: mass
     reaction_mass = lumped_mass  # Default: lumped_mass
     
     [pacing]
          # The pacing type depends on how we stimulate
          # Types avaialable
          # function: gives a function f(x,y,z,t) to specify the stimulus
          # S1: S1 stimulation protocol
          # S1S2: S1S2 stimulation protocol
          type = function # Default: NONE
          function = '(x+y+z)*(t<1)'
          # Check the pacing protocol classes for more info
     [../]
     
     [linear_solver]
          type = cg            #Default: gmres
          preconditioner = sor # Default: amg
     [../]
[../]